#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1 How many orders were placed in January? 

SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID != 'Order ID';

#2 How many of those orders were for an iPhone? 

SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID != 'Order ID'
AND Product = 'iPhone';

#3 Select the customer account numbers for all the orders that were placed in February.

SELECT cust.acctnum 
FROM BIT_DB.FebSales feb
INNER JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID != 'Order ID';

#4 Which product was the cheapest one sold in January, and what was the price? 

SELECT Product, price 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID != 'Order ID'
ORDER BY price LIMIT 1;

#5 What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).

SELECT Product, SUM(Quantity)*price AS revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID != 'Order ID'
GROUP BY product;

#6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, SUM(Quantity) AS num_sold, SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID != 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT cust.acctnum), AVG(Quantity)*price
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID != 'Order ID'
AND feb.Quantity > 2;

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT DISTINCT product, SUM(Quantity) AS num_sold
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

#9 Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).

SELECT DISTINCT location, COUNT(orderID) AS num_of_orders
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6
AND orderID != 'Order ID'
GROUP BY location
HAVING num_of_orders >= 3;

#10 How many of each type of headphone were sold in February?

SELECT DISTINCT product, SUM(Quantity) AS num_sold
FROM BIT_DB.FebSales
WHERE product LIKE '%Headphones%'
AND length(orderID) = 6
AND orderID != 'Order ID'
GROUP BY product;

#11 What was the average amount spent per account in February? 

SELECT SUM(feb.Quantity*feb.price)/COUNT(cust.acctnum) AS avg_amt_spent
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID != 'Order ID';

#12 What was the average quantity of products purchased per account in February? 

SELECT SUM(feb.Quantity)/COUNT(cust.acctnum) AS avg_quantity
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
On feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID != 'Order ID';

#13 Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT product, SUM(quantity*price) AS total_revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID != 'Order ID'
GROUP BY product 
ORDER BY total_revenue DESC LIMIT 1;

